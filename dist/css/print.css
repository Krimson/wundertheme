/* -----------------------------------------------------------------------

Print styles

----------------------------------------------------------------------- */
/* -----------------------------------------------------------------------

BREAKPOINTS

Imported from breakpoints.json

----------------------------------------------------------------------- */
/* -----------------------------------------------------------------------

COLORS

----------------------------------------------------------------------- */
/* -----------------------------------------------------------------------

NEAT SETTINGS

Override the default neat grid settings

----------------------------------------------------------------------- */
/* -----------------------------------------------------------------------

SETTINGS

Default settings

----------------------------------------------------------------------- */
/* -----------------------------------------------------------------------

TYPOGRAPHY

----------------------------------------------------------------------- */
html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

/* -----------------------------------------------------------------------

CLEARFIX

----------------------------------------------------------------------- */
.clearfix::after {
  clear: both;
  content: "";
  display: table;
}

/* -----------------------------------------------------------------------

GRID

----------------------------------------------------------------------- */
.row {
  display: block;
}

.row::after {
  clear: both;
  content: "";
  display: table;
}

.container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

.container::after {
  clear: both;
  content: "";
  display: table;
}

.col-1 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 6.17215%;
}

.col-1:last-child {
  margin-right: 0;
}

.col-2 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 14.70196%;
}

.col-2:last-child {
  margin-right: 0;
}

.col-3 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 23.23176%;
}

.col-3:last-child {
  margin-right: 0;
}

.col-4 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%;
}

.col-4:last-child {
  margin-right: 0;
}

.col-5 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 40.29137%;
}

.col-5:last-child {
  margin-right: 0;
}

.col-6 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 48.82117%;
}

.col-6:last-child {
  margin-right: 0;
}

.col-7 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 57.35098%;
}

.col-7:last-child {
  margin-right: 0;
}

.col-8 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 65.88078%;
}

.col-8:last-child {
  margin-right: 0;
}

.col-9 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 74.41059%;
}

.col-9:last-child {
  margin-right: 0;
}

.col-10 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 82.94039%;
}

.col-10:last-child {
  margin-right: 0;
}

.col-11 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 91.4702%;
}

.col-11:last-child {
  margin-right: 0;
}

.col-12 {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 100%;
}

.col-12:last-child {
  margin-right: 0;
}

/* -----------------------------------------------------------------------

FUNCTIONS

----------------------------------------------------------------------- */
/* -----------------------------------------------------------------------

PRINT

Contains the print styles

----------------------------------------------------------------------- */

/*# sourceMappingURL=data:application/json;base64, */
